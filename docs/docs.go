// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Aliev Farid",
            "url": "https://github.com/farid21ola"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/info": {
            "get": {
                "description": "Fetches the details of a song given an artist's name and song title.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "songs"
                ],
                "summary": "Get song detail",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Artist/group Name",
                        "name": "group",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Song Title",
                        "name": "song",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Song details",
                        "schema": {
                            "$ref": "#/definitions/models.SongDetail"
                        }
                    },
                    "404": {
                        "description": "Not Found - Song not found",
                        "schema": {
                            "$ref": "#/definitions/resp.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/resp.Response"
                        }
                    }
                }
            }
        },
        "/songs": {
            "get": {
                "description": "Fetches a list of songs with optional filters for artist and song title, and supports pagination via limit and offset.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "songs"
                ],
                "summary": "Get a list of songs with optional filters and pagination.",
                "parameters": [
                    {
                        "type": "string",
                        "example": "\"The Beatles\"",
                        "description": "Artist Name",
                        "name": "group",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "\"Hey Jude\"",
                        "description": "Song Title",
                        "name": "song",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Limit of songs to retrieve",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Offset for pagination",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of songs",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Song"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/resp.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/resp.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Updates the details of a song by artist and title. Only the fields that are provided in the request body will be updated. Fields like lyrics, release date, and link are optional.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "songs"
                ],
                "summary": "Update song details by artist and title.",
                "parameters": [
                    {
                        "description": "New song info ",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Song"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Song successfully updated",
                        "schema": {
                            "$ref": "#/definitions/resp.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/resp.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found - Song not found",
                        "schema": {
                            "$ref": "#/definitions/resp.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/resp.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "The request contains details about the song, including the artist's name, song title, release date, lyrics, and a link.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "songs"
                ],
                "summary": "Add song",
                "parameters": [
                    {
                        "description": "Song info",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Song"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Song successfully added",
                        "schema": {
                            "$ref": "#/definitions/resp.Response"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/resp.Response"
                        }
                    },
                    "409": {
                        "description": "Song already exists",
                        "schema": {
                            "$ref": "#/definitions/resp.Response"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/resp.Response"
                        }
                    }
                }
            }
        },
        "/songs/lyrics": {
            "get": {
                "description": "Fetches lyrics of a song by artist and title with optional pagination support for limit and offset.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "lyrics"
                ],
                "summary": "Get song lyrics with optional pagination.",
                "parameters": [
                    {
                        "type": "string",
                        "example": "\"The Beatles\"",
                        "description": "Artist Name",
                        "name": "group",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "\"Hey Jude\"",
                        "description": "Song Title",
                        "name": "song",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Limit the number of lyrics lines to retrieve",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Offset for pagination",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Song lyrics successfully retrieved",
                        "schema": {
                            "$ref": "#/definitions/models.Lyrics"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Missing required parameters",
                        "schema": {
                            "$ref": "#/definitions/resp.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/resp.Response"
                        }
                    }
                }
            }
        },
        "/songs/{group}/{song}": {
            "delete": {
                "description": "Deletes the specified song by artist and title from the database. Requires both \"group\" and \"song\" path parameters.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "songs"
                ],
                "summary": "Delete a song by artist and title.",
                "parameters": [
                    {
                        "type": "string",
                        "example": "\"The Beatles\"",
                        "description": "Artist Name",
                        "name": "group",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "\"Hey Jude\"",
                        "description": "Song Title",
                        "name": "song",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Song successfully deleted",
                        "schema": {
                            "$ref": "#/definitions/resp.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/resp.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found - Song not found",
                        "schema": {
                            "$ref": "#/definitions/resp.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/resp.Response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Lyrics": {
            "type": "object",
            "properties": {
                "text": {
                    "type": "string",
                    "example": "Ooh baby, don't you know..."
                }
            }
        },
        "models.Song": {
            "type": "object",
            "required": [
                "group",
                "song"
            ],
            "properties": {
                "group": {
                    "type": "string",
                    "example": "Muse"
                },
                "link": {
                    "type": "string",
                    "example": "https://www.youtube.com/watch?v=Xsp3_a-PMTw"
                },
                "release_date": {
                    "type": "string",
                    "example": "16.07.2006"
                },
                "song": {
                    "type": "string",
                    "example": "Supermassive Black Hole"
                },
                "text": {
                    "type": "string",
                    "example": "Ooh baby, don't you know..."
                }
            }
        },
        "models.SongDetail": {
            "type": "object",
            "properties": {
                "link": {
                    "type": "string",
                    "example": "https://www.youtube.com/watch?v=Xsp3_a-PMTw"
                },
                "release_date": {
                    "type": "string",
                    "example": "16.07.2006"
                },
                "text": {
                    "type": "string",
                    "example": "Ooh baby, don't you know I suffer?\\nOoh baby, canyou hear me moan?\\nYou caught me under false pretenses\\nHow long before you let me go?\\n\\nOoh\\nYou set my soul alight\\nOoh\\nYou set my soul alight"
                }
            }
        },
        "resp.Response": {
            "type": "object",
            "properties": {
                "erorr": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "0.0.1",
	Host:             "localhost:8082",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Song library API",
	Description:      "API server for song library",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
